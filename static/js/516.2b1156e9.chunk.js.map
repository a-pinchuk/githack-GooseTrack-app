{"version":3,"file":"static/js/516.2b1156e9.chunk.js","mappings":"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","sources":["components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledAuthNavigate = styled(Link)`\n  display: block;\n\n  font-family: ${p => p.theme.fonts.text};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.16;\n  text-align: center;\n\n  color: ${p => p.theme.colors.primary};\n  text-decoration: underline;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledAuthNavigate } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <StyledAuthNavigate to={link}>{text}</StyledAuthNavigate>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n\n  background-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.small};\n\n  @media screen and (max-width: 345px) {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-top: 0;\n  margin-bottom: 32px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: 18px;\n  line-height: 1.33;\n\n  color: ${p => p.theme.colors.primary};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.21;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n\n  &.is-valid {\n    color: ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    color: ${p => p.theme.colors.redErrorLight};\n  }\n\n  & p {\n    margin: 0;\n    padding: 0;\n    margin-top: 8px;\n    margin-left: 18px;\n    color: ${p => p.theme.colors.greenValid};\n  }\n\n  & .error-success {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 14px;\n\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.29px;\n\n  color: ${p => p.theme.colors.black};\n  outline: none;\n  border: ${p => p.theme.borders.normal} rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.12;\n  }\n\n  &::placeholder {\n    font-family: ${p => p.theme.fonts.text};\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.29;\n    color: rgba(17, 17, 17, 0.15);\n\n    @media screen and (min-width: 768px) {\n      font-size: ${p => p.theme.fontSizes.m};\n      line-height: 1.12;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n  }\n\n  &.is-valid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.redErrorLight};\n  }\n`;\n\nexport const PasswordInputWrapper = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const VisibilityBtn = styled.button`\n  position: absolute;\n  right: 18px;\n  top: 50%;\n  transform: translateY(-50%);\n\n  padding: 0;\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  & svg.is-valid {\n    stroke: ${p => p.theme.colors.greenValid};\n    fill: ${p => p.theme.colors.greenValid};\n  }\n\n  & svg.is-invalid {\n    stroke: ${p => p.theme.colors.redErrorLight};\n    fill: ${p => p.theme.colors.redErrorLight};\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.28px;\n  letter-spacing: -0.02em;\n\n  border: none;\n  border-radius: ${p => p.theme.radii.big};\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    padding-top: 16px;\n    padding-bottom: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${p => p.theme.colors.white};\n  height: 18px;\n  width: 18px;\n\n  @media screen and (min-width: 768px) {\n    height: 20px;\n    width: 20px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  margin-left: 18px;\n  margin-top: 8px;\n\n  color: ${p => p.theme.colors.redError};\n`;\n\nexport const ResetPasswordLink = styled(Link)`\n  display: block;\n\n  margin-bottom: 32px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n  text-decoration: none;\n\n  color: ${p => p.theme.colors.primary};\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 48px;\n\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.21;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport { logIn } from 'redux/auth/operations';\nimport {\n  Form,\n  Title,\n  Label,\n  Field,\n  ErrorMessage,\n  InputWrapper,\n  PasswordInputWrapper,\n  VisibilityBtn,\n  Button,\n  Svg,\n  ResetPasswordLink,\n} from './LoginForm.styled';\n\nimport sprite from 'icons/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const [passwordType, setPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting }) => {\n        await dispatch(logIn(values));\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, values, errors, touched }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n\n        return (\n          <Form>\n            <Title>Log In</Title>\n            <Label className={isValid('email')}>\n              Email\n              <InputWrapper>\n                <Field\n                  className={isValid('email')}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter email\"\n                  title=\"Email must be in the format username@domain.com\"\n                  value={values.email}\n                />\n\n                {isValid('email') === 'is-valid' && (\n                  <svg height=\"20\" width=\"20\" className=\"error-success\">\n                    <use href={sprite + '#icon-input-success'}></use>\n                  </svg>\n                )}\n                {isValid('email') === 'is-invalid' && (\n                  <svg height=\"20\" width=\"20\" className=\"error-success\">\n                    <use href={sprite + '#icon-input-error'}></use>\n                  </svg>\n                )}\n              </InputWrapper>\n              {isValid('email') === 'is-valid' && (\n                <p>This is a CORRECT email</p>\n              )}\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </Label>\n            <Label className={isValid('password')}>\n              Password\n              <PasswordInputWrapper>\n                <Field\n                  className={isValid('password')}\n                  type={passwordType}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  title=\"Password must contain at least one number, one lowercase and one uppercase letter, and be at least 6 characters long.\"\n                  value={values.password}\n                />\n\n                <VisibilityBtn type=\"button\" onClick={togglePassword}>\n                  {passwordType === 'password' ? (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('password')}\n                    >\n                      <use href={sprite + '#icon-hide'}></use>\n                    </svg>\n                  ) : (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('password')}\n                    >\n                      <use href={sprite + '#icon-show'}></use>\n                    </svg>\n                  )}\n                </VisibilityBtn>\n              </PasswordInputWrapper>\n              {isValid('password') === 'is-valid' && (\n                <p>This is a CORRECT password</p>\n              )}\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n\n            <ResetPasswordLink to=\"/password\">\n              Forgot your password ?\n            </ResetPasswordLink>\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting' : 'Log in'}\n              <Svg>\n                <use href={sprite + '#icon-enter'}></use>\n              </Svg>\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport goose_1x from 'images/loginPage/desktop_loginPage.png';\nimport goose_2x from 'images/loginPage/desktop_loginPage@2x.png';\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${p => p.theme.colors.bgBlue};\n`;\n\nexport const FormWrapper = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 18px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: absolute;\n  width: 368px;\n  height: 521px;\n  right: 60px;\n  bottom: 19px;\n\n  background-image: url(${goose_1x});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose_2x});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n`;\n\nexport const Link = styled.a`\n  display: block;\n    margin-top: 8px;\n\n    font-family: ${p => p.theme.fonts.text};\n    font-weight: ${p => p.theme.fontWeights.medium};\n    font-size: ${p => p.theme.fontSizes.xs};\n    line-height: 1.16;\n    text-align: center;\n\n    color: ${p => p.theme.colors.primary};\n    text-decoration: underline;\n\n    text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n      0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n    @media screen and (min-width: 768px) {\n      font-size: 18px;\n      line-height: 1.33;\n    }\n\n`\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateAccessToken } from 'redux/auth/authSlice';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport { Container, FormWrapper, ImgWrapper, Link } from './LoginPage.styled';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const accessToken = window.location?.search.split('=')[1];\n\n    dispatch(updateAccessToken(accessToken));\n  }, [dispatch]);\n  return (\n    <Container>\n      <FormWrapper>\n        <LoginForm />\n      </FormWrapper>\n\n      <AuthNavigate link=\"/register\" text=\"Sign up\" />\n\n      <Link href=\"https://githack-goosetrack.onrender.com/api/users/google\">\n        Login with Google\n      </Link>\n      <ImgWrapper />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["StyledAuthNavigate","styled","Link","_templateObject","_taggedTemplateLiteral","p","theme","fonts","text","fontWeights","medium","fontSizes","xs","colors","primary","AuthNavigate","_ref","link","_jsx","children","to","Form","FormikForm","background","radii","small","Title","_templateObject2","heading","Label","_templateObject3","lineHeights","body","black","s","greenValid","redErrorLight","Field","FormikField","_templateObject4","borders","normal","m","PasswordInputWrapper","_templateObject5","InputWrapper","_templateObject6","VisibilityBtn","_templateObject7","Button","_templateObject8","big","shadows","boxShadow","white","secondary","Svg","_templateObject9","ErrorMessage","FormikErrorMessage","_templateObject10","redError","ResetPasswordLink","_templateObject11","validationSchema","Yup","shape","email","required","password","min","matches","LoginForm","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","togglePassword","Formik","initialValues","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","setSubmitting","_context","prev","next","logIn","stop","_x","_x2","apply","arguments","_ref3","isSubmitting","errors","touched","isValid","field","_jsxs","className","type","name","placeholder","title","value","height","width","href","sprite","component","onClick","stroke","disabled","Container","bgBlue","FormWrapper","ImgWrapper","goose_1x","goose_2x","useEffect","_window$location","accessToken","window","location","search","split","updateAccessToken"],"sourceRoot":""}