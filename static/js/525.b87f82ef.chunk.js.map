{"version":3,"file":"static/js/525.b87f82ef.chunk.js","mappings":"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","sources":["components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledAuthNavigate = styled(NavLink)`\n  display: block;\n\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.16;\n\n  color: ${p => p.theme.colors.primary};\n  text-decoration: underline;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledAuthNavigate } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <StyledAuthNavigate to={link}>{text}</StyledAuthNavigate>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n\n  background-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.small};\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n\n  .ValidInput {\n    border: ${p => p.theme.borders.normal} rgba(220, 227, 229, 0.6);\n  }\n\n  .InvalidInput {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.redError};\n  }\n`;\n\nexport const StyledTitle = styled.p`\n  margin-top: 0;\n  margin-bottom: 32px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: 18px;\n  line-height: 1.33;\n\n  color: ${p => p.theme.colors.primary};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.21;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n\n  &:nth-of-type(3) {\n    margin-bottom: 32px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 48px;\n    }\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.redError};\n`;\n\nexport const StyledField = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 14px;\n\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.29px;\n\n  color: ${p => p.theme.colors.black};\n  border: ${p => p.theme.borders.normal} rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.12;\n  }\n\n  &::placeholder {\n    font-family: ${p => p.theme.fonts.text};\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.29;\n    color: rgba(17, 17, 17, 0.15);\n\n    @media screen and (min-width: 768px) {\n      font-size: ${p => p.theme.fontSizes.m};\n      line-height: 1.12;\n    }\n  }\n`;\n\nexport const PasswordInputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const StyledVisibilityBtn = styled.button`\n  position: absolute;\n  right: 18px;\n  top: 50%;\n  transform: translateY(-50%);\n\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.28px;\n  letter-spacing: -0.02em;\n\n  border: none;\n  border-radius: ${p => p.theme.radii.big};\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    padding-top: 16px;\n    padding-bottom: 16px;\n  }\n`;\n\nexport const Svg = styled.svg`\n  stroke: ${p => p.theme.colors.white};\n  height: 18px;\n  width: 18px;\n\n  @media screen and (min-width: 768px) {\n    height: 20px;\n    width: 20px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport { register } from 'redux/auth/operations';\nimport {\n  StyledForm,\n  StyledTitle,\n  StyledButton,\n  Label,\n  StyledField,\n  StyledErrorMessage,\n  PasswordInputWrapper,\n  StyledVisibilityBtn,\n  Svg,\n} from './RegisterForm.styled';\n\nimport sprite from 'icons/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(/^\\S[\\S\\s]{0,28}\\S$/, 'Name must be between 2 and 30 characters')\n    .test(\n      'name-validation',\n      'Name must be at least 2 characters long',\n      value => {\n        return value && value.replace(/\\s/g, '').length >= 2;\n      }\n    ),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [passwordType, setPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting }) => {\n        await dispatch(register(values));\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, values, errors, touched }) => (\n        <StyledForm>\n          <StyledTitle>Sign Up</StyledTitle>\n          <Label>\n            Name\n            <StyledField\n              className={\n                errors.name && touched.name ? 'InvalidInput' : 'ValidInput'\n              }\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              value={values.name}\n            />\n            <StyledErrorMessage name=\"name\" component=\"div\" />\n          </Label>\n          <Label>\n            Email\n            <StyledField\n              className={\n                errors.email && touched.email ? 'InvalidInput' : 'ValidInput'\n              }\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              title=\"Email must be in the format username@domain.com\"\n              value={values.email}\n            />\n            <StyledErrorMessage name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Password\n            <PasswordInputWrapper>\n              <StyledField\n                className={\n                  errors.password && touched.password\n                    ? 'InvalidInput'\n                    : 'ValidInput'\n                }\n                type={passwordType}\n                name=\"password\"\n                placeholder=\"Enter password\"\n                title=\"Password must contain at least one number, one lowercase and one uppercase letter, and be at least 6 characters long.\"\n                value={values.password}\n              />\n\n              <StyledVisibilityBtn type=\"button\" onClick={togglePassword}>\n                {passwordType === 'password' ? (\n                  <svg height=\"20\" width=\"20\" fill=\"#111111\">\n                    <use href={sprite + '#icon-hide'}></use>\n                  </svg>\n                ) : (\n                  <svg height=\"20\" width=\"20\" fill=\"#111111\">\n                    <use href={sprite + '#icon-show'}></use>\n                  </svg>\n                )}\n              </StyledVisibilityBtn>\n            </PasswordInputWrapper>\n            <StyledErrorMessage name=\"password\" component=\"div\" />\n          </Label>\n          <StyledButton type=\"submit\" disabled={isSubmitting}>\n            {isSubmitting ? 'Submitting' : 'Sign Up'}\n            <Svg>\n              <use href={sprite + '#icon-enter'}></use>\n            </Svg>\n          </StyledButton>\n        </StyledForm>\n      )}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport goose_1x from 'images/signUpPage/desktop_signupPage.png';\nimport goose_2x from 'images/signUpPage/desktop_signupPage@2x.png';\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${p => p.theme.colors.bgBlue};\n`;\n\nexport const FormWrapper = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 18px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: absolute;\n  width: 400px;\n  height: 416px;\n  left: 49px;\n  bottom: 0;\n\n  background-image: url(${goose_1x});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2) {\n    background-image: url(${goose_2x});\n  }\n  @media screen and (max-width: 1439px) {\n    display: none;\n  }\n`;\n","import React from 'react';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport { Container, FormWrapper, ImgWrapper } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Container>\n      <FormWrapper>\n        <RegisterForm />\n      </FormWrapper>\n\n      <AuthNavigate link=\"/login\" text=\"Log In\" />\n\n      <ImgWrapper />\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["StyledAuthNavigate","styled","NavLink","p","theme","fontWeights","medium","fontSizes","xs","colors","primary","AuthNavigate","link","text","to","StyledForm","Form","background","radii","small","borders","normal","redError","StyledTitle","fonts","heading","Label","lineHeights","body","black","s","StyledErrorMessage","ErrorMessage","StyledField","Field","m","PasswordInputWrapper","StyledVisibilityBtn","StyledButton","big","shadows","boxShadow","white","Svg","validationSchema","Yup","shape","name","required","matches","test","value","replace","length","email","password","min","RegisterForm","dispatch","useDispatch","useState","passwordType","setPasswordType","togglePassword","initialValues","onSubmit","values","setSubmitting","register","isSubmitting","errors","touched","className","type","placeholder","title","component","onClick","height","width","fill","href","sprite","disabled","Container","bgBlue","FormWrapper","ImgWrapper","goose_1x","goose_2x"],"sourceRoot":""}