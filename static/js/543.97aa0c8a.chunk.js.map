{"version":3,"file":"static/js/543.97aa0c8a.chunk.js","mappings":"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","sources":["components/MonthCalendarHead/MonthCalendarHead.styled.js","components/MonthCalendarHead/MonthCalendarHead.js","components/CalendarTable/CalendarTable.styled.js","components/CalendarTable/CalendarTable.js","components/ChoosedMonth/ChoosedMonth.js","redux/task/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DaysWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  margin: 0 auto 14px;\n  padding: 16px 0 16px 0;\n  height: 50px;\n  max-width: 767px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.12;\n\n  background: #ffffff;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    height: 46px;\n    max-width: 704px;\n    margin-bottom: 14px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    height: 46px;\n    max-width: 1087px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const СellOfDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props =>\n    props.isWeekend\n      ? `${props.theme.colors.primary}`\n      : `${props.theme.colors.text}`};\n`;\n","import React from 'react';\nimport { DaysWrapper, СellOfDay } from './MonthCalendarHead.styled';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const MonthCalendarHead = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n  // const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const daysArray = [...Array(7)].map((_, i) => {\n    if (isMobile) {\n      return moment()\n        .day(i + 1)\n        .format('ddd')\n        .toUpperCase()[0];\n    }\n    return moment()\n      .day(i + 1)\n      .format('ddd')\n      .toUpperCase();\n  });\n\n  return (\n    <DaysWrapper>\n      {daysArray.map((day, i) => (\n        <СellOfDay key={i} isWeekend={i === 5 || i === 6}>\n          {day}\n        </СellOfDay>\n      ))}\n    </DaysWrapper>\n  );\n};\n","// import styled from 'styled-components';\n\n// export const CalendarGridWrapper = styled.div`\n//   display: grid;\n//   grid-template-columns: repeat(7, 1fr);\n//   grid-template-rows: repeat(6, 1fr);\n//   grid-gap: 1px;\n//   max-width: 767px;\n//   margin: 0 auto;\n//   height: 470px;\n\n//   border: 1px solid rgba(220, 227, 229, 0.8);\n//   overflow: hidden;\n//   background: rgba(220, 227, 229, 0.8);\n//   border-radius: 8px;\n\n//   @media screen and (min-width: 768px) {\n//     max-width: 704px;\n//     height: 720px;\n//   }\n\n//   @media screen and (min-width: 1440px) {\n//     max-width: 1087px;\n//     height: 625px;\n//   }\n// `;\n\n// export const RowInCeil = styled.div`\n//   display: flex;\n//   margin-bottom: 4px;\n//   justify-content: ${props =>\n//     props.justifyContent ? props.justifyContent : 'flex-start'};\n\n//   @media screen and (min-width: 768px) {\n//     margin-bottom: 1px;\n//   }\n//   @media screen and (min-width: 1440px) {\n//     margin-bottom: 6px;\n//   }\n// `;\n\n// export const DayWrapper = styled.div`\n//   width: 20px;\n//   height: 22px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   flex-direction: column;\n\n//   margin-right: 2px;\n\n//   font-family: 'Inter';\n//   font-style: normal;\n//   font-weight: 700;\n//   font-size: 12px;\n//   line-height: 1.17;\n//   /* identical to box height, or 117% */\n\n//   @media screen and (min-width: 768px) {\n//     width: 27px;\n//     height: 26px;\n\n//     font-size: 16px;\n//     line-height: 1.12;\n//     margin-right: 10px;\n//   }\n// `;\n\n// export const CurrentDay = styled.span`\n//   width: 100%;\n//   height: 100%;\n\n//   display: flex;\n\n//   color: #ffffff;\n\n//   align-items: center;\n//   justify-content: center;\n//   padding: 4px 8px;\n\n//   background: #3e85f3;\n//   border-radius: 8px;\n\n//   @media screen and (min-width: 768px) {\n//     width: 27px;\n//     height: 26px;\n\n//     font-size: 16px;\n//     line-height: 1.12;\n//   }\n// `;\n\n// export const ShowDayWrapper = styled.div`\n//   display: flex;\n//   justify-content: flex-end;\n// `;\n\n// export const TaskList = styled.ul`\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   gap: 2px;\n//   width: 100%;\n//   padding: 0;\n//   margin: 0;\n\n//   font-family: 'Inter';\n//   font-style: normal;\n//   font-weight: 700;\n//   font-size: 10px;\n//   line-height: 1.4;\n\n//   list-style: none;\n// `;\n\n// export const TaskItem = styled.li`\n//   padding: 4px 4px 4px 4px;\n\n//   border-radius: 8px;\n\n//   background-color: ${props => {\n//     switch (props.priority) {\n//       case 'low':\n//         return '#72C2F8';\n//       case 'medium':\n//         return '#FCF0D4';\n//       case 'high':\n//         return '#FFD2DD';\n//       default:\n//         return '#FFD2DD';\n//     }\n//   }};\n\n//   color: ${props => {\n//     switch (props.priority) {\n//       case 'low':\n//         return '#3E85F3';\n//       case 'medium':\n//         return '#F3B249';\n//       case 'high':\n//         return '#EA3D65';\n//       default:\n//         return '#72C2F8';\n//     }\n//   }};\n\n//   @media screen and (min-width: 768px) {\n//     padding: 4px 10px 4px 12px;\n\n//     font-size: 14px;\n//     line-height: 1.29;\n//   }\n\n//   @media screen and (min-width: 1440px) {\n//     padding: 4px 15px 4px 12px;\n//   }\n// `;\n\nimport styled from 'styled-components';\n\nexport const CalendarGridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  max-width: 767px;\n  margin: 0 auto;\n  height: 470px;\n\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  overflow: hidden;\n  background-color: rgba(220, 227, 229, 0.8);\n  border-radius: ${props => props.theme.radii.small};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    max-width: 704px;\n    height: 720px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    max-width: 1087px;\n    height: 625px;\n  }\n`;\n\nexport const RowInCeil = styled.div`\n  display: flex;\n  margin-bottom: 4px;\n  justify-content: ${props =>\n    props.justifyContent ? props.justifyContent : 'flex-start'};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    margin-bottom: 3px;\n  }\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    margin-bottom: 9px;\n  }\n`;\n\nexport const DayWrapper = styled.div`\n  width: 20px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  margin-right: 2px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.body};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    width: 27px;\n    height: 26px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.heading};\n    margin-right: 10px;\n  }\n`;\n\nexport const CurrentDay = styled.span`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n\n  color: ${props => props.theme.colors.white};\n\n  align-items: center;\n  justify-content: center;\n  padding: 4px 8px;\n\n  background: ${props => props.theme.colors.primary};\n  border-radius: ${props => props.theme.radii.small};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    width: 27px;\n    height: 26px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.heading};\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const TaskList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 2px;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.body};\n\n  list-style: none;\n`;\n\nexport const TaskItem = styled.li`\n  padding: 4px 4px 4px 4px;\n\n  border-radius: ${props => props.theme.radii.small};\n\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#72C2F8';\n      case 'medium':\n        return props.theme.colors.lightYellow;\n      case 'high':\n        return props.theme.colors.lightRed;\n      default:\n        return props.theme.colors.lightRed;\n    }\n  }};\n\n  color: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return props.theme.colors.primary;\n      case 'medium':\n        return props.theme.colors.mainYellow;\n      case 'high':\n        return props.theme.colors.mainRed;\n      default:\n        return '#72C2F8';\n    }\n  }};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    padding: 4px 10px 4px 12px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.body};\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    padding: 4px 15px 4px 12px;\n  }\n`;\n","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport styled from 'styled-components';\n\nimport {\n  CalendarGridWrapper,\n  RowInCeil,\n  DayWrapper,\n  CurrentDay,\n  ShowDayWrapper,\n  TaskList,\n  TaskItem,\n} from './CalendarTable.styled';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nconst DayLink = styled(Link)`\n  /* min-width: 47px; */\n  padding: 5px 2px;\n  overflow: hidden;\n\n  text-decoration: none;\n\n  background-color: #ffff;\n\n  color: ${props =>\n    props.isSelectedMonth ? '#343434' : 'rgba(52, 52, 52, 0.3)'};\n\n  transition-property: all;\n  transition-duration: 100ms;\n  transition-timing-function: linear;\n\n  :hover {\n    transform: scale(1.05);\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n\n  @media screen and (min-width: 768px) {\n    /* min-width: calc(100px-6px); */\n    padding: 8px 4px 2px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 14px 8px 2px;\n  }\n`;\n\nexport const CalendarTable = ({ startDay, today, tasks }) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n  // const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const totalDays = 42;\n\n  let maxLengthOfTaskTitle = null;\n\n  if (isMobile) {\n    maxLengthOfTaskTitle = 3;\n  } else if (isTablet) {\n    maxLengthOfTaskTitle = 6;\n  } else {\n    maxLengthOfTaskTitle = 12;\n  }\n\n  const cutString = str => {\n    if (str.length > maxLengthOfTaskTitle) {\n      return str.substring(0, maxLengthOfTaskTitle) + '...';\n    }\n    return str;\n  };\n\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = day => moment().isSame(day, 'day');\n  const isSelectedMonth = day => today.isSame(day, 'month');\n\n  const filterTask = calendarDay => {\n    if (!tasks || tasks.length === 0) {\n      return [];\n    }\n    let dayTasksFiltered = [\n      ...tasks.filter(task => task.date === calendarDay.format('YYYY-MM-DD')),\n    ];\n    return dayTasksFiltered;\n  };\n\n  return (\n    <CalendarGridWrapper>\n      {daysArray.map(dayItem => {\n        const dayTasks = filterTask(dayItem); // Получаем отфильтрованные задачи для данного дня\n        return (\n          <DayLink\n            to={`/calendar/day/${dayItem.format('YYYY-MM-DD')}`}\n            key={dayItem.format('DDMMYYYY')}\n            isSelectedMonth={isSelectedMonth(dayItem)}\n          >\n            <RowInCeil justifyContent={'flex-end'}>\n              <ShowDayWrapper>\n                <DayWrapper>\n                  {!isCurrentDay(dayItem) ? (\n                    <span>{dayItem.format('D')}</span>\n                  ) : (\n                    <CurrentDay>{dayItem.format('D')}</CurrentDay>\n                  )}\n                </DayWrapper>\n              </ShowDayWrapper>\n            </RowInCeil>\n            {dayTasks.length > 0 && (\n              <TaskList>\n                {dayTasks.map(\n                  (\n                    task // Используем отфильтрованные задачи здесь\n                  ) => (\n                    <TaskItem key={task._id} priority={task.priority}>\n                      {cutString(task.title)}\n                    </TaskItem>\n                  )\n                )}\n              </TaskList>\n            )}\n          </DayLink>\n        );\n      })}\n    </CalendarGridWrapper>\n  );\n};\n","import React from 'react';\nimport { MonthCalendarHead } from '../MonthCalendarHead/MonthCalendarHead';\nimport { CalendarTable } from '../CalendarTable/CalendarTable';\nimport { useSelector } from 'react-redux';\nimport { selectAllTasks } from '../../redux/task/selectors';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ChoosedMonth = () => {\n  const allTasks = useSelector(selectAllTasks);\n\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  const { currentDate } = useParams();\n\n  const today = moment(currentDate);\n\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable tasks={allTasks} today={today} startDay={startDay} />\n    </div>\n  );\n};\n\nexport default ChoosedMonth;\n","export const selectAllTasks = state => state.tasks.tasks;\nexport const selectTasksError = state => state.tasks.error;\nexport const selectTasksLoading = state => state.tasks.isLoading;\n"],"names":["DaysWrapper","styled","props","theme","fonts","heading","fontWeights","medium","fontSizes","m","breakpoints","table","desktop","СellOfDay","isWeekend","colors","primary","text","MonthCalendarHead","isMobile","useMediaQuery","maxWidth","daysArray","Array","map","_","i","moment","day","format","toUpperCase","CalendarGridWrapper","radii","small","RowInCeil","justifyContent","DayWrapper","bold","xs","lineHeights","body","s","CurrentDay","white","ShowDayWrapper","TaskList","TaskItem","priority","lightYellow","lightRed","mainYellow","mainRed","DayLink","Link","isSelectedMonth","CalendarTable","startDay","today","tasks","isTablet","minWidth","maxLengthOfTaskTitle","clone","subtract","add","isCurrentDay","isSame","dayItem","calendarDay","dayTasks","length","filter","task","date","to","str","title","substring","_id","allTasks","useSelector","selectAllTasks","week","dow","currentDate","useParams","startOf","state"],"sourceRoot":""}