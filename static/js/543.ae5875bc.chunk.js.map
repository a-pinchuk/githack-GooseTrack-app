{"version":3,"file":"static/js/543.ae5875bc.chunk.js","mappings":"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","sources":["components/MonthCalendarHead/MonthCalendarHead.styled.js","components/MonthCalendarHead/MonthCalendarHead.js","components/CalendarTable/CalendarTable.styled.js","components/CalendarTable/CalendarTable.js","components/ChoosedMonth/ChoosedMonth.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DaysWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  margin: 0 auto 14px;\n  padding: 16px 0 16px 0;\n  height: 50px;\n  max-width: 767px;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.medium};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.12;\n\n  background: ${p => p.theme.colors.second_backgrond_mode};\n  border: ${p => p.theme.colors.calendar_out_border};\n  border-radius: 8px;\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    height: 46px;\n    max-width: 704px;\n    margin-bottom: 14px;\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    height: 46px;\n    max-width: 1087px;\n    margin-bottom: 15px;\n  }\n`;\n\nexport const СellOfDay = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${props =>\n    props.isWeekend\n      ? `${props.theme.colors.primary}`\n      : `${props.theme.colors.third_text_mode}`};\n`;\n","import React from 'react';\nimport { DaysWrapper, СellOfDay } from './MonthCalendarHead.styled';\nimport moment from 'moment';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const MonthCalendarHead = () => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  // const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n  // const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const daysArray = [...Array(7)].map((_, i) => {\n    if (isMobile) {\n      return moment()\n        .day(i + 1)\n        .format('ddd')\n        .toUpperCase()[0];\n    }\n    return moment()\n      .day(i + 1)\n      .format('ddd')\n      .toUpperCase();\n  });\n\n  return (\n    <DaysWrapper>\n      {daysArray.map((day, i) => (\n        <СellOfDay key={i} isWeekend={i === 5 || i === 6}>\n          {day}\n        </СellOfDay>\n      ))}\n    </DaysWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CalendarGridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  grid-gap: 1px;\n  max-width: 767px;\n  margin: 0 auto;\n  height: calc(100vh - 320px);\n  border: ${p => p.theme.colors.calendar_out_border};\n\n  /* border: 1px solid rgba(220, 227, 229, 0.8); */\n  overflow: hidden;\n  background-color: rgba(220, 227, 229, 0.8);\n  background-color: ${p => p.theme.colors.calendar_inner_background};\n  border-radius: ${props => props.theme.radii.small};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    max-width: 704px;\n    height: calc(100vh - 280px);\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    max-width: 1087px;\n    height: calc(100vh - 270px);\n  }\n`;\n\nexport const RowInCeil = styled.div`\n  display: flex;\n  margin-bottom: 4px;\n  justify-content: ${props =>\n    props.justifyContent ? props.justifyContent : 'flex-start'};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    margin-bottom: 3px;\n  }\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    margin-bottom: 9px;\n  }\n`;\n\nexport const DayWrapper = styled.div`\n  width: 20px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  margin-right: 2px;\n\n  color: ${p => p.theme.colors.primary_text_mode};\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.body};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    width: 27px;\n    height: 26px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.heading};\n    margin-right: 10px;\n  }\n`;\n\nexport const CurrentDay = styled.span`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n\n  color: ${props => props.theme.colors.white};\n\n  align-items: center;\n  justify-content: center;\n  padding: 4px 8px;\n\n  background: ${props => props.theme.colors.primary};\n  border-radius: ${props => props.theme.radii.small};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    width: 27px;\n    height: 26px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.heading};\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const TaskList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 2px;\n  width: 100%;\n  padding: 0;\n  margin: 0;\n\n  font-family: ${props => props.theme.fonts.heading};\n  font-style: normal;\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.xs};\n  line-height: ${props => props.theme.lineHeights.body};\n\n  list-style: none;\n`;\n\nexport const TaskItem = styled.li`\n  padding: 4px 4px 4px 4px;\n\n  border-radius: ${props => props.theme.radii.small};\n\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return '#72C2F8';\n      case 'medium':\n        return props.theme.colors.lightYellow;\n      case 'high':\n        return props.theme.colors.lightRed;\n      default:\n        return props.theme.colors.lightRed;\n    }\n  }};\n\n  color: ${props => {\n    switch (props.priority) {\n      case 'low':\n        return props.theme.colors.primary;\n      case 'medium':\n        return props.theme.colors.mainYellow;\n      case 'high':\n        return props.theme.colors.mainRed;\n      default:\n        return '#72C2F8';\n    }\n  }};\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.table}) {\n    padding: 4px 10px 4px 12px;\n\n    font-size: ${props => props.theme.fontSizes.s};\n    line-height: ${props => props.theme.lineHeights.body};\n  }\n\n  @media screen and (min-width: ${props => props.theme.breakpoints.desktop}) {\n    padding: 4px 15px 4px 12px;\n  }\n`;\n","import React from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport styled from 'styled-components';\n\nimport {\n  CalendarGridWrapper,\n  RowInCeil,\n  DayWrapper,\n  CurrentDay,\n  ShowDayWrapper,\n  TaskList,\n  TaskItem,\n} from './CalendarTable.styled';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { theme } from 'theme';\n\nconst DayLink = styled(Link)`\n  /* min-width: 47px; */\n  padding: 5px 2px;\n  overflow: hidden;\n\n  text-decoration: none;\n\n  background-color: ${p => p.theme.colors.second_backgrond_mode};\n  /* border: ${p => p.theme.colors.calendar_out_border}; */\n\n  /* color: ${props => props.color}; */\n\n  transition-property: all;\n  transition-duration: 100ms;\n  transition-timing-function: linear;\n\n  :hover {\n    transform: scale(1.05);\n    border-radius: 3px;\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n\n  @media screen and (min-width: 768px) {\n    /* min-width: calc(100px-6px); */\n    padding: 8px 4px 2px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 14px 8px 2px;\n  }\n`;\n\nexport const CalendarTable = ({ startDay, today, tasks }) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n  // const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const totalDays = 42;\n\n  let maxLengthOfTaskTitle = null;\n\n  if (isMobile) {\n    maxLengthOfTaskTitle = 3;\n  } else if (isTablet) {\n    maxLengthOfTaskTitle = 6;\n  } else {\n    maxLengthOfTaskTitle = 12;\n  }\n\n  const cutString = str => {\n    if (str.length > maxLengthOfTaskTitle) {\n      return str.substring(0, maxLengthOfTaskTitle) + '...';\n    }\n    return str;\n  };\n\n  const day = startDay.clone().subtract(1, 'day');\n  const daysArray = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = day => moment().isSame(day, 'day');\n  const isSelectedMonth = day => {\n    return today.isSame(day, 'month');\n  };\n\n  const filterTask = calendarDay => {\n    if (!tasks || tasks.length === 0) {\n      return [];\n    }\n    let dayTasksFiltered = [\n      ...tasks.filter(task => task.date === calendarDay.format('YYYY-MM-DD')),\n    ];\n    return dayTasksFiltered;\n  };\n\n  return (\n    <CalendarGridWrapper data-tour=\"4\">\n      {daysArray.map(dayItem => {\n        const dayTasks = filterTask(dayItem); // Получаем отфильтрованные задачи для данного дня\n        return (\n          <DayLink\n            to={`/calendar/day/${dayItem.format('YYYY-MM-DD')}`}\n            key={dayItem.format('DDMMYYYY')}\n          >\n            <RowInCeil justifyContent={'flex-end'}>\n              <ShowDayWrapper>\n                <DayWrapper>\n                  {!isCurrentDay(dayItem) ? (\n                    <span\n                      style={{\n                        color: `${\n                          isSelectedMonth(dayItem)\n                            ? `${theme.colors.third_text_mode}`\n                            : '#A9A9A9'\n                        }`,\n                      }}\n                    >\n                      {dayItem.format('D')}\n                    </span>\n                  ) : (\n                    <CurrentDay>{dayItem.format('D')}</CurrentDay>\n                  )}\n                </DayWrapper>\n              </ShowDayWrapper>\n            </RowInCeil>\n            {dayTasks.length > 0 && (\n              <TaskList>\n                {dayTasks.map(\n                  (\n                    task // Используем отфильтрованные задачи здесь\n                  ) => (\n                    <TaskItem key={task._id} priority={task.priority}>\n                      {cutString(task.title)}\n                    </TaskItem>\n                  )\n                )}\n              </TaskList>\n            )}\n          </DayLink>\n        );\n      })}\n    </CalendarGridWrapper>\n  );\n};\n","import React from 'react';\nimport { MonthCalendarHead } from '../MonthCalendarHead/MonthCalendarHead';\nimport { CalendarTable } from '../CalendarTable/CalendarTable';\nimport { useSelector } from 'react-redux';\nimport { selectAllTasks } from '../../redux/task/selectors';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ChoosedMonth = () => {\n  const allTasks = useSelector(selectAllTasks);\n\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  const { currentDate } = useParams();\n\n  const today = moment(currentDate);\n\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable tasks={allTasks} today={today} startDay={startDay} />\n    </div>\n  );\n};\n\nexport default ChoosedMonth;\n"],"names":["DaysWrapper","styled","_templateObject","_taggedTemplateLiteral","props","theme","fonts","heading","fontWeights","medium","fontSizes","m","p","colors","second_backgrond_mode","calendar_out_border","breakpoints","table","desktop","СellOfDay","_templateObject2","isWeekend","concat","primary","third_text_mode","MonthCalendarHead","isMobile","useMediaQuery","maxWidth","daysArray","_toConsumableArray","Array","map","_","i","moment","day","format","toUpperCase","_jsx","children","CalendarGridWrapper","calendar_inner_background","radii","small","RowInCeil","justifyContent","DayWrapper","_templateObject3","primary_text_mode","bold","xs","lineHeights","body","s","CurrentDay","_templateObject4","white","ShowDayWrapper","_templateObject5","TaskList","_templateObject6","TaskItem","_templateObject7","priority","lightYellow","lightRed","mainYellow","mainRed","DayLink","Link","color","CalendarTable","_ref","startDay","today","tasks","isTablet","minWidth","maxLengthOfTaskTitle","clone","subtract","add","isCurrentDay","isSame","isSelectedMonth","dayItem","calendarDay","dayTasks","length","filter","task","date","_jsxs","to","style","str","title","substring","_id","allTasks","useSelector","selectAllTasks","week","dow","currentDate","useParams","startOf"],"sourceRoot":""}