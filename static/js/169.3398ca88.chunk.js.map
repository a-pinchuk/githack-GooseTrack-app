{"version":3,"file":"static/js/169.3398ca88.chunk.js","mappings":"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","sources":["components/CalendarPage/TemporaryHeaderCalendar.jsx","components/PeriodPaginator/PeriodPaginator.styled.js","components/PeriodPaginator/PeriodPaginator.jsx","components/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","components/CalendarPage/CalendarPage.jsx","redux/task/selectors.js"],"sourcesContent":["import React from 'react';\n// import { setNextDate, setPreviousDate } from 'redux/date/dateSlice';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectDate } from 'redux/date/selectors';\nexport const TemporaryHeaderCalendar = () => {\n  // const currentDate = useSelector(selectDate);\n  // const dispatch = useDispatch();\n\n  // function formatDate() {\n  //   const options = { day: 'numeric', month: 'short', year: 'numeric' };\n  //   const date = new Date(currentDate);\n  //   return date.toLocaleDateString('en-US', options);\n  // }\n\n  // const handlePreviousDate = () => {\n  //   dispatch(setPreviousDate());\n  // };\n\n  // const handleNextDate = () => {\n  //   dispatch(setNextDate());\n  // };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '46px',\n          marginBottom: '38px',\n        }}\n      >\n        <h2 style={{ margin: '0' }}>Calendar</h2>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <button style={{ marginRight: '10px' }}>Feedback</button>\n          <button style={{ marginRight: '10px' }}>iconMoon</button>\n          <div\n            style={{\n              width: '44px',\n              height: '44px',\n              borderRadius: '50%',\n              backgroundColor: 'lightblue',\n            }}\n          ></div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PaginatorDate = styled.button`\n  width: 180px;\n  height: 34px;\n  margin-right: 8px;\n  padding: 8px 12px;\n  background-color: ${props => props.theme.colors.primary};\n  border: ${props => props.theme.borders.none};\n  border-radius: ${props => props.theme.radii.small};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.125;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const PaginatorBtn = styled.button`\n  width: 38px;\n  height: 34px;\n  background-color: ${props => props.theme.colors.white};\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: ${props => props.theme.radii.small};\n  cursor: pointer;\n`;\n\nexport const LeftPaginatorBtn = styled(PaginatorBtn)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: none;\n`;\n\nexport const RightPaginatorBtn = styled(PaginatorBtn)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport {\n  LeftPaginatorBtn,\n  PaginatorDate,\n  RightPaginatorBtn,\n} from './PeriodPaginator.styled';\nimport { useParams } from 'react-router-dom';\n\nexport const PeriodPaginator = ({\n  today,\n  typeSelect,\n  todayHandler,\n  prevHandler,\n  nextHandler,\n}) => {\n  //console.log(today);\n  const { currentDay } = useParams();\n  // console.log('date:', currentDay);\n\n  return (\n    <div>\n      <PaginatorDate onClick={todayHandler}>\n        {typeSelect === 'month'\n          ? today.format('MMMM YYYY')\n          : today.format('D  MMMM YYYY ')}\n      </PaginatorDate>\n      <LeftPaginatorBtn\n        onClick={prevHandler}\n        disabled={\n          currentDay === moment().format('YYYY-MM-DD') ||\n          currentDay === moment().format('YYYY-MM')\n        }\n      >\n        {'<'}\n      </LeftPaginatorBtn>\n      <RightPaginatorBtn onClick={nextHandler}>{'>'}</RightPaginatorBtn>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PeriodTypeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const PeriodTypeBtn = styled.button`\n  width: 82px;\n  height: 34px;\n  border: none;\n  border-radius: ${props => props.theme.radii.small};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.125;\n  text-align: center;\n  color: ${props => props.theme.colors.primary};\n  cursor: pointer;\n\n  background-color: ${props =>\n    props.isActive\n      ? props.theme.colors.darkBlue\n      : props.theme.colors.lightBlue};\n`;\n\nexport const MonthPeriodTypeBtn = styled(PeriodTypeBtn)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 1px solid rgba(62, 133, 243, 0.2);\n`;\n\nexport const DayPeriodTypeBtn = styled(PeriodTypeBtn)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n","import React from 'react';\nimport {\n  DayPeriodTypeBtn,\n  MonthPeriodTypeBtn,\n  PeriodTypeWrapper,\n} from './PeriodTypeSelect.styled';\n\nexport const PeriodTypeSelect = ({\n  typeSelect,\n  typeMonthHendler,\n  typeDayHendler,\n}) => {\n  return (\n    <PeriodTypeWrapper>\n      <MonthPeriodTypeBtn\n        isActive={typeSelect === 'month'}\n        onClick={typeMonthHendler}\n      >\n        Month\n      </MonthPeriodTypeBtn>\n      <DayPeriodTypeBtn\n        isActive={typeSelect === 'day'}\n        onClick={typeDayHendler}\n      >\n        Day\n      </DayPeriodTypeBtn>\n    </PeriodTypeWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 38px;\n`;\n","import React from 'react';\n\nimport { PeriodPaginator } from 'components/PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from 'components/PeriodTypeSelect/PeriodTypeSelect';\nimport { ToolbarWrapper } from './CalendarToolbar.styled';\n\nexport const CalendarToolbar = props => {\n  const {\n    today,\n    typeSelect,\n    todayHandler,\n    prevHandler,\n    nextHandler,\n    typeMonthHendler,\n    typeDayHendler,\n  } = props;\n\n  // const [date, setDate] = useState(today);\n  // console.log('CalendarToolbar ~ setDate:', setDate);\n  // console.log('CalendarToolbar ~ date:', date);\n\n  return (\n    <>\n      <ToolbarWrapper>\n        <PeriodPaginator\n          today={today}\n          typeSelect={typeSelect}\n          todayHandler={todayHandler}\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n        />\n        <PeriodTypeSelect\n          typeSelect={typeSelect}\n          typeMonthHendler={typeMonthHendler}\n          typeDayHendler={typeDayHendler}\n        />\n      </ToolbarWrapper>\n    </>\n  );\n};\n","import React, { useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n// import LogoutBtn from 'components/TestBtnLogout/LogoutBtn';\nimport { useNavigate, useParams } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { TemporaryHeaderCalendar } from './TemporaryHeaderCalendar';\n\nimport { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllTasks } from 'redux/task/operations';\nimport { selectAllTasks } from 'redux/task/selectors';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { currentDay, currentDate } = useParams();\n  const { pathname } = useLocation();\n  const typeSelect = pathname.includes('/calendar/day') ? 'day' : 'month';\n\n  const workDate = currentDate || currentDay;\n\n  // * Task\n  const tasks = useSelector(selectAllTasks);\n\n  useEffect(() => {\n    if (pathname === '/calendar') {\n      navigate(`/calendar/month/${moment().format('YYYY-MM-DD')}`);\n    }\n  }, [pathname, navigate]);\n\n  useEffect(() => {\n    if (tasks.length === 0) {\n      // ! Якщо змінився місяць то треба фетчити таски\n      //Винести в окремий\n      dispatch(fetchAllTasks());\n    }\n  }, [dispatch, tasks]);\n\n  const todayHandler = () => {\n    // Перейти на день\n    console.log('Перейти на день');\n    // setToday(moment());\n  };\n\n  const prevHandler = () => {\n    navigate(\n      `/calendar/${typeSelect}/${moment(workDate)\n        .subtract(1, typeSelect)\n        .format('YYYY-MM-DD')}`\n    );\n  };\n\n  const nextHandler = () => {\n    navigate(\n      `/calendar/${typeSelect}/${moment(workDate)\n        .add(1, typeSelect)\n        .format('YYYY-MM-DD')}`\n    );\n  };\n\n  const typeMonthHendler = () => {\n    navigate(`/calendar/month/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  const typeDayHendler = () => {\n    navigate(`/calendar/day/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  return (\n    <div\n      style={{\n        marginLeft: '32px',\n        marginRight: '32px',\n        // display: 'flex',\n      }}\n    >\n      <TemporaryHeaderCalendar />\n      <CalendarToolbar\n        today={moment(workDate)}\n        typeSelect={typeSelect}\n        todayHandler={todayHandler}\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n        typeMonthHendler={typeMonthHendler}\n        typeDayHendler={typeDayHendler}\n      />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default CalendarPage;\n","export const selectAllTasks = state => state.tasks.tasks;\nexport const selectTasksError = state => state.tasks.error;\nexport const selectTasksLoading = state => state.tasks.isLoading;\nexport const selectSuccessful = state => state.tasks.successful;\n"],"names":["TemporaryHeaderCalendar","_jsx","_Fragment","children","_jsxs","style","display","justifyContent","alignItems","marginTop","marginBottom","margin","marginRight","width","height","borderRadius","backgroundColor","PaginatorDate","styled","_templateObject","_taggedTemplateLiteral","props","theme","colors","primary","borders","none","radii","small","fonts","heading","fontWeights","bold","fontSizes","m","white","PaginatorBtn","_templateObject2","LeftPaginatorBtn","_templateObject3","RightPaginatorBtn","_templateObject4","PeriodPaginator","_ref","today","typeSelect","todayHandler","prevHandler","nextHandler","currentDay","useParams","onClick","format","disabled","moment","PeriodTypeWrapper","PeriodTypeBtn","normal","isActive","darkBlue","lightBlue","MonthPeriodTypeBtn","DayPeriodTypeBtn","PeriodTypeSelect","typeMonthHendler","typeDayHendler","ToolbarWrapper","CalendarToolbar","navigate","useNavigate","dispatch","useDispatch","_useParams","currentDate","pathname","useLocation","includes","workDate","tasks","useSelector","selectAllTasks","useEffect","concat","length","fetchAllTasks","marginLeft","console","log","subtract","add","Suspense","fallback","Outlet","state","selectTasksError","error","selectSuccessful","successful"],"sourceRoot":""}