{"version":3,"file":"static/js/654.8ef160e1.chunk.js","mappings":"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","sources":["components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/PasswordRecoveryForm/PasswordRecoveryForm.styled.jsx","components/PasswordRecoveryForm/PasswordRecoveryForm.jsx","pages/PasswordRecoveryPage/PasswordRecoveryPage.styled.jsx","pages/PasswordRecoveryPage/PasswordRecoveryPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledAuthNavigate = styled(Link)`\n  display: block;\n\n  font-family: ${p => p.theme.fonts.text};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: 1.16;\n  text-align: center;\n\n  color: ${p => p.theme.colors.primary};\n  text-decoration: underline;\n\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledAuthNavigate } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <StyledAuthNavigate to={link}>{text}</StyledAuthNavigate>\n    </div>\n  );\n};\n\nAuthNavigate.propTypes = {\n  link: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikErrorMessage,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 24px;\n\n  background-color: ${p => p.theme.colors.background};\n  border-radius: ${p => p.theme.radii.small};\n\n  @media screen and (max-width: 345px) {\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 40px;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-top: 0;\n  margin-bottom: 32px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: 18px;\n  line-height: 1.33;\n\n  color: ${p => p.theme.colors.primary};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;\n    font-size: 24px;\n    line-height: 1;\n  }\n`;\n\nexport const Label = styled.label`\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n\n  color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.21;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 18px;\n    }\n  }\n\n  &:nth-of-type(3) {\n    margin-bottom: 32px;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 48px;\n    }\n  }\n\n  &.is-valid {\n    color: ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    color: ${p => p.theme.colors.redErrorLight};\n  }\n\n  & p {\n    margin: 0;\n    padding: 0;\n    margin-top: 8px;\n    margin-left: 18px;\n    color: ${p => p.theme.colors.greenValid};\n  }\n\n  & .error-success {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`;\n\nexport const Field = styled(FormikField)`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 14px;\n\n  font-size: ${p => p.theme.fontSizes.s};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  line-height: 1.29px;\n\n  color: ${p => p.theme.colors.black};\n  outline: none;\n  border: ${p => p.theme.borders.normal} rgba(17, 17, 17, 0.15);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px;\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: 1.12;\n  }\n\n  &::placeholder {\n    font-family: ${p => p.theme.fonts.text};\n    font-size: ${p => p.theme.fontSizes.s};\n    line-height: 1.29;\n    color: rgba(17, 17, 17, 0.15);\n\n    @media screen and (min-width: 768px) {\n      font-size: ${p => p.theme.fontSizes.m};\n      line-height: 1.12;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.black};\n  }\n\n  &.is-valid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.redErrorLight};\n  }\n`;\n\nexport const PasswordInputWrapper = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const InputWrapper = styled.div`\n  position: relative;\n  margin-top: 8px;\n`;\n\nexport const VisibilityBtn = styled.button`\n  position: absolute;\n  right: 18px;\n  top: 50%;\n  transform: translateY(-50%);\n\n  padding: 0;\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n\n  & svg.is-valid {\n    stroke: ${p => p.theme.colors.greenValid};\n    fill: ${p => p.theme.colors.greenValid};\n  }\n\n  & svg.is-invalid {\n    stroke: ${p => p.theme.colors.redErrorLight};\n    fill: ${p => p.theme.colors.redErrorLight};\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 11px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.28px;\n  letter-spacing: -0.02em;\n\n  border: none;\n  border-radius: ${p => p.theme.radii.big};\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.33;\n    padding-top: 16px;\n    padding-bottom: 16px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  margin-left: 18px;\n  margin-top: 8px;\n  color: ${p => p.theme.colors.redError};\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nimport { resetPassword } from 'redux/auth/operations';\nimport {\n  Form,\n  Title,\n  Label,\n  Field,\n  ErrorMessage,\n  PasswordInputWrapper,\n  VisibilityBtn,\n  Button,\n} from './PasswordRecoveryForm.styled';\n\nimport sprite from 'icons/sprite.svg';\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n  passwordConfirm: Yup.string()\n    .required('Password confirmation is required')\n    .oneOf([Yup.ref('password'), null], 'Passwords must match'),\n});\n\nexport const PasswordRecoveryForm = ({ token }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [passwordType, setPasswordType] = useState('password');\n  const [confirmPasswordType, setConfirmPasswordType] = useState('password');\n\n  const togglePassword = () => {\n    if (passwordType === 'password') {\n      setPasswordType('text');\n      return;\n    }\n    setPasswordType('password');\n  };\n\n  const toggleConfirmPassword = () => {\n    if (confirmPasswordType === 'password') {\n      setConfirmPasswordType('text');\n      return;\n    }\n    setConfirmPasswordType('password');\n  };\n\n  return (\n    <Formik\n      initialValues={{ password: '', passwordConfirm: '' }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting }) => {\n        const res = await dispatch(\n          resetPassword({ token, newPassword: values.password })\n        );\n        if (res.type === '/users/reset-password/fulfilled') {\n          navigate('/login', { replace: true });\n        }\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, values, errors, touched }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n\n        return (\n          <Form>\n            <Title>Password recovery</Title>\n\n            <Label className={isValid('password')}>\n              Password\n              <PasswordInputWrapper>\n                <Field\n                  className={isValid('password')}\n                  type={passwordType}\n                  name=\"password\"\n                  placeholder=\"Enter password\"\n                  title=\"Password must contain at least one number, one lowercase and one uppercase letter, and be at least 6 characters long.\"\n                  value={values.password}\n                />\n\n                <VisibilityBtn type=\"button\" onClick={togglePassword}>\n                  {passwordType === 'password' ? (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('password')}\n                    >\n                      <use href={sprite + '#icon-hide'}></use>\n                    </svg>\n                  ) : (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('password')}\n                    >\n                      <use href={sprite + '#icon-show'}></use>\n                    </svg>\n                  )}\n                </VisibilityBtn>\n              </PasswordInputWrapper>\n              {isValid('password') === 'is-valid' && (\n                <p>This is a CORRECT password</p>\n              )}\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </Label>\n\n            <Label className={isValid('passwordConfirm')}>\n              Confirm Password\n              <PasswordInputWrapper>\n                <Field\n                  className={isValid('passwordConfirm')}\n                  type={confirmPasswordType}\n                  name=\"passwordConfirm\"\n                  placeholder=\"Confirm password\"\n                  title=\"Please confirm your password\"\n                  value={values.passwordConfirm}\n                />\n\n                <VisibilityBtn type=\"button\" onClick={toggleConfirmPassword}>\n                  {confirmPasswordType === 'password' ? (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('passwordConfirm')}\n                    >\n                      <use href={sprite + '#icon-hide'}></use>\n                    </svg>\n                  ) : (\n                    <svg\n                      height=\"20\"\n                      width=\"20\"\n                      stroke=\"#111111\"\n                      className={isValid('passwordConfirm')}\n                    >\n                      <use href={sprite + '#icon-show'}></use>\n                    </svg>\n                  )}\n                </VisibilityBtn>\n              </PasswordInputWrapper>\n              {isValid('passwordConfirm') === 'is-valid' && (\n                <p>This is a CORRECT password confirmation</p>\n              )}\n              <ErrorMessage name=\"passwordConfirm\" component=\"div\" />\n            </Label>\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? 'Submitting' : 'Send'}\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  min-height: 100vh;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  background-color: ${p => p.theme.colors.bgBlue};\n`;\n\nexport const FormWrapper = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 18px;\n\n  @media screen and (max-width: 374px) {\n    width: 100%;\n    max-width: 335px;\n  }\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 480px;\n    margin-bottom: 24px;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { updateAccessToken } from 'redux/auth/authSlice';\nimport { PasswordRecoveryForm } from 'components/PasswordRecoveryForm/PasswordRecoveryForm';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\n\nimport { Container, FormWrapper } from './PasswordRecoveryPage.styled';\n\nconst PasswordRecoveryPage = () => {\n  const dispatch = useDispatch();\n  const { token } = useParams();\n\n  useEffect(() => {\n    const accessToken = window.location?.search.split('=')[1];\n\n    dispatch(updateAccessToken(accessToken));\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <FormWrapper>\n        <PasswordRecoveryForm token={token} />\n      </FormWrapper>\n\n      <AuthNavigate link=\"/login\" text=\"Log In\" />\n    </Container>\n  );\n};\n\nexport default PasswordRecoveryPage;\n"],"names":["StyledAuthNavigate","styled","Link","_templateObject","_taggedTemplateLiteral","p","theme","fonts","text","fontWeights","medium","fontSizes","xs","colors","primary","AuthNavigate","_ref","link","_jsx","children","to","Form","FormikForm","background","radii","small","Title","_templateObject2","heading","Label","_templateObject3","lineHeights","body","black","s","greenValid","redErrorLight","Field","FormikField","_templateObject4","borders","normal","m","PasswordInputWrapper","_templateObject5","VisibilityBtn","_templateObject6","_templateObject7","Button","_templateObject8","big","shadows","boxShadow","white","secondary","ErrorMessage","FormikErrorMessage","_templateObject9","redError","validationSchema","Yup","shape","password","required","min","matches","passwordConfirm","oneOf","PasswordRecoveryForm","token","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","_useState3","_useState4","confirmPasswordType","setConfirmPasswordType","togglePassword","toggleConfirmPassword","Formik","initialValues","onSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref2","setSubmitting","_context","prev","next","resetPassword","newPassword","sent","type","replace","stop","_x","_x2","apply","arguments","_ref4","isSubmitting","errors","touched","isValid","field","_jsxs","className","name","placeholder","title","value","onClick","height","width","stroke","href","sprite","component","disabled","Container","bgBlue","FormWrapper","useParams","useEffect","_window$location","accessToken","window","location","search","split","updateAccessToken"],"sourceRoot":""}