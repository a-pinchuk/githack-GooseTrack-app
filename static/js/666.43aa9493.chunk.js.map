{"version":3,"file":"static/js/666.43aa9493.chunk.js","mappings":"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","sources":["components/TestBtnLogout/LogoutBtn.jsx","components/CalendarPage/TemporaryHeaderCalendar.jsx","components/PeriodPaginator/PeriodPaginator.styled.js","components/PeriodPaginator/PeriodPaginator.jsx","components/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","components/CalendarPage/CalendarPage.jsx","redux/task/selectors.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from '@mui/material';\nimport { logOut } from '../../redux/auth/operations'; // Укажите правильный путь к вашему файлу с операциями\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <Button variant=\"outlined\" color=\"secondary\" onClick={handleLogout}>\n      Logout\n    </Button>\n  );\n};\n\nexport default LogoutBtn;\n","import React from 'react';\n// import { setNextDate, setPreviousDate } from 'redux/date/dateSlice';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { selectDate } from 'redux/date/selectors';\nexport const TemporaryHeaderCalendar = () => {\n  // const currentDate = useSelector(selectDate);\n  // const dispatch = useDispatch();\n\n  // function formatDate() {\n  //   const options = { day: 'numeric', month: 'short', year: 'numeric' };\n  //   const date = new Date(currentDate);\n  //   return date.toLocaleDateString('en-US', options);\n  // }\n\n  // const handlePreviousDate = () => {\n  //   dispatch(setPreviousDate());\n  // };\n\n  // const handleNextDate = () => {\n  //   dispatch(setNextDate());\n  // };\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '46px',\n          marginBottom: '38px',\n        }}\n      >\n        <h2 style={{ margin: '0' }}>Calendar</h2>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <button style={{ marginRight: '10px' }}>Feedback</button>\n          <button style={{ marginRight: '10px' }}>iconMoon</button>\n          <div\n            style={{\n              width: '44px',\n              height: '44px',\n              borderRadius: '50%',\n              backgroundColor: 'lightblue',\n            }}\n          ></div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PaginatorDate = styled.button`\n  width: 180px;\n  height: 34px;\n  margin-right: 8px;\n  padding: 8px 12px;\n  background-color: ${props => props.theme.colors.primary};\n  border: ${props => props.theme.borders.none};\n  border-radius: ${props => props.theme.radii.small};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.125;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const PaginatorBtn = styled.button`\n  width: 38px;\n  height: 34px;\n  background-color: ${props => props.theme.colors.white};\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: ${props => props.theme.radii.small};\n  cursor: pointer;\n`;\n\nexport const LeftPaginatorBtn = styled(PaginatorBtn)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: none;\n`;\n\nexport const RightPaginatorBtn = styled(PaginatorBtn)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n","import React from 'react';\nimport moment from 'moment';\nimport {\n  LeftPaginatorBtn,\n  PaginatorDate,\n  RightPaginatorBtn,\n} from './PeriodPaginator.styled';\nimport { useParams } from 'react-router-dom';\n\nexport const PeriodPaginator = ({\n  today,\n  typeSelect,\n  todayHandler,\n  prevHandler,\n  nextHandler,\n}) => {\n  //console.log(today);\n  const { currentDay } = useParams();\n  // console.log('date:', currentDay);\n\n  return (\n    <div>\n      <PaginatorDate onClick={todayHandler}>\n        {typeSelect === 'month'\n          ? today.format('MMMM YYYY')\n          : today.format('D  MMMM YYYY ')}\n      </PaginatorDate>\n      <LeftPaginatorBtn\n        onClick={prevHandler}\n        disabled={\n          currentDay === moment().format('YYYY-MM-DD') ||\n          currentDay === moment().format('YYYY-MM')\n        }\n      >\n        {'<'}\n      </LeftPaginatorBtn>\n      <RightPaginatorBtn onClick={nextHandler}>{'>'}</RightPaginatorBtn>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PeriodTypeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const PeriodTypeBtn = styled.button`\n  width: 82px;\n  height: 34px;\n  border: none;\n  border-radius: ${props => props.theme.radii.small};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.m};\n  line-height: 1.125;\n  text-align: center;\n  color: ${props => props.theme.colors.primary};\n  cursor: pointer;\n\n  background-color: ${props =>\n    props.isActive\n      ? props.theme.colors.darkBlue\n      : props.theme.colors.lightBlue};\n`;\n\nexport const MonthPeriodTypeBtn = styled(PeriodTypeBtn)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: 1px solid rgba(62, 133, 243, 0.2);\n`;\n\nexport const DayPeriodTypeBtn = styled(PeriodTypeBtn)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n`;\n","import React from 'react';\nimport {\n  DayPeriodTypeBtn,\n  MonthPeriodTypeBtn,\n  PeriodTypeWrapper,\n} from './PeriodTypeSelect.styled';\n\nexport const PeriodTypeSelect = ({\n  typeSelect,\n  typeMonthHendler,\n  typeDayHendler,\n}) => {\n  return (\n    <PeriodTypeWrapper>\n      <MonthPeriodTypeBtn\n        isActive={typeSelect === 'month'}\n        onClick={typeMonthHendler}\n      >\n        Month\n      </MonthPeriodTypeBtn>\n      <DayPeriodTypeBtn\n        isActive={typeSelect === 'day'}\n        onClick={typeDayHendler}\n      >\n        Day\n      </DayPeriodTypeBtn>\n    </PeriodTypeWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ToolbarWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 38px;\n`;\n","import React from 'react';\n\nimport { PeriodPaginator } from 'components/PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from 'components/PeriodTypeSelect/PeriodTypeSelect';\nimport { ToolbarWrapper } from './CalendarToolbar.styled';\n\nexport const CalendarToolbar = props => {\n  const {\n    today,\n    typeSelect,\n    todayHandler,\n    prevHandler,\n    nextHandler,\n    typeMonthHendler,\n    typeDayHendler,\n  } = props;\n\n  // const [date, setDate] = useState(today);\n  // console.log('CalendarToolbar ~ setDate:', setDate);\n  // console.log('CalendarToolbar ~ date:', date);\n\n  return (\n    <>\n      <ToolbarWrapper>\n        <PeriodPaginator\n          today={today}\n          typeSelect={typeSelect}\n          todayHandler={todayHandler}\n          prevHandler={prevHandler}\n          nextHandler={nextHandler}\n        />\n        <PeriodTypeSelect\n          typeSelect={typeSelect}\n          typeMonthHendler={typeMonthHendler}\n          typeDayHendler={typeDayHendler}\n        />\n      </ToolbarWrapper>\n    </>\n  );\n};\n","import React, { useEffect, Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport LogoutBtn from 'components/TestBtnLogout/LogoutBtn';\nimport { useNavigate, useParams } from 'react-router';\nimport { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { TemporaryHeaderCalendar } from './TemporaryHeaderCalendar';\n\nimport { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllTasks } from 'redux/task/operations';\nimport { selectAllTasks } from 'redux/task/selectors';\n\nconst CalendarPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { currentDay, currentDate } = useParams();\n  const { pathname } = useLocation();\n  const typeSelect = pathname.includes('/calendar/day') ? 'day' : 'month';\n\n  const workDate = currentDate || currentDay;\n\n  // * Task\n  const tasks = useSelector(selectAllTasks);\n\n  useEffect(() => {\n    if (pathname === '/calendar') {\n      navigate(`/calendar/month/${moment().format('YYYY-MM-DD')}`);\n    }\n  }, [pathname, navigate]);\n\n  useEffect(() => {\n    if (tasks.length === 0) {\n      // ! Якщо змінився місяць то треба фетчити таски\n      //Винести в окремий\n      dispatch(fetchAllTasks());\n    }\n  }, [dispatch, tasks]);\n\n  const todayHandler = () => {\n    // Перейти на день\n    console.log('Перейти на день');\n    // setToday(moment());\n  };\n\n  const prevHandler = () => {\n    navigate(\n      `/calendar/${typeSelect}/${moment(workDate)\n        .subtract(1, typeSelect)\n        .format('YYYY-MM-DD')}`\n    );\n  };\n\n  const nextHandler = () => {\n    navigate(\n      `/calendar/${typeSelect}/${moment(workDate)\n        .add(1, typeSelect)\n        .format('YYYY-MM-DD')}`\n    );\n  };\n\n  const typeMonthHendler = () => {\n    navigate(`/calendar/month/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  const typeDayHendler = () => {\n    navigate(`/calendar/day/${moment().format('YYYY-MM-DD')}`);\n  };\n\n  return (\n    <div\n      style={{\n        marginLeft: '32px',\n        marginRight: '32px',\n      }}\n    >\n      <LogoutBtn />\n\n      <TemporaryHeaderCalendar />\n      <CalendarToolbar\n        today={moment(workDate)}\n        typeSelect={typeSelect}\n        todayHandler={todayHandler}\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n        typeMonthHendler={typeMonthHendler}\n        typeDayHendler={typeDayHendler}\n      />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default CalendarPage;\n","export const selectAllTasks = state => state.tasks.tasks;\nexport const selectTasksError = state => state.tasks.error;\nexport const selectTasksLoading = state => state.tasks.isLoading;\nexport const selectSuccessful = state => state.tasks.successful;\n"],"names":["dispatch","useDispatch","Button","variant","color","onClick","logOut","TemporaryHeaderCalendar","style","display","justifyContent","alignItems","marginTop","marginBottom","margin","marginRight","width","height","borderRadius","backgroundColor","PaginatorDate","styled","props","theme","colors","primary","borders","none","radii","small","fonts","heading","fontWeights","bold","fontSizes","m","white","PaginatorBtn","LeftPaginatorBtn","RightPaginatorBtn","PeriodPaginator","today","typeSelect","todayHandler","prevHandler","nextHandler","currentDay","useParams","format","disabled","moment","PeriodTypeWrapper","PeriodTypeBtn","normal","isActive","darkBlue","lightBlue","MonthPeriodTypeBtn","DayPeriodTypeBtn","PeriodTypeSelect","typeMonthHendler","typeDayHendler","ToolbarWrapper","CalendarToolbar","navigate","useNavigate","currentDate","pathname","useLocation","includes","workDate","tasks","useSelector","selectAllTasks","useEffect","length","fetchAllTasks","marginLeft","console","log","subtract","add","Suspense","fallback","state","selectTasksError","error","selectSuccessful","successful"],"sourceRoot":""}